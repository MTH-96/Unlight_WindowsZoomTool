<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ExeLocationTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>187, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABoAAABUAAAAfAAAAIcAAAB1AAAARwAA
        AA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArAAAASAAAAEcAAABHAAAARwAAAEcAAABHAAAASAAA
        ACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAABSAAAAywAAAPoAAAD+AAAA+gAA
        APwAAAD0AAAAuQAAADsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQAAAD4AAAA9gAAAPcAAAD3AAAA9wAA
        APcAAAD8AAAAmgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASQAAAOwAAAD7AAAArAAA
        AGIAAABMAAAAXgAAAKYAAAD6AAAA2wAAADMAAAAAAAAAAAAAAAAAAAAAAAAAnAAAAP8AAACtAAAAiwAA
        AIwAAACMAAAAjAAAAI8AAABXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAC7AAAA/wAA
        AIIAAAAHAAAAAAAAAAAAAAAAAAAABQAAAHwAAAD/AAAAowAAAAUAAAAAAAAAAAAAAAAAAACcAAAA/QAA
        AEcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANAAA
        APEAAADOAAAAFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAM8AAADmAAAAJgAAAAAAAAAAAAAAAAAA
        AJwAAAD9AAAASQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABZAAAA/wAAAJUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlwAAAP0AAABLAAAAAAAA
        AAAAAAAAAAAAnAAAAP0AAABJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAG4AAAD/AAAAdwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8AAAA/wAA
        AGEAAAAAAAAAAAAAAAAAAACcAAAA/QAAAEkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAcgAAAP8AAABvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AHYAAAD/AAAAaAAAAAAAAAAAAAAAAAAAAJwAAAD9AAAASQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABzAAAA/wAAAG8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAdwAAAP8AAABpAAAAAAAAAAAAAAAAAAAAnAAAAP0AAABJAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHMAAAD/AAAAbwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAB3AAAA/wAAAGkAAAAAAAAAAAAAAAAAAACcAAAA/QAAAEkAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdAAAAP8AAABvAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHcAAAD/AAAAaQAAAAAAAAAAAAAAAAAAAJwAAAD9AAAASQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0AAAA/wAA
        AG8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeAAAAP8AAABpAAAAAAAAAAAAAAAAAAAAnAAA
        AP0AAABJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AHUAAAD/AAAAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4AAAA/wAAAGoAAAAAAAAAAAAA
        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
        AB/8AAA//gAAf/8AAP//gAH//+AD///gB/8=
</value>
  </data>
</root>